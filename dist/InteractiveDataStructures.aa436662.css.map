{"mappings":"AAuEA;;;;;;;;;;;;;;AAYA;;;;;;;;;;;AAUA;;;;AAGA","sources":["src/app.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Bogosort Visualizer</h1>\r\n    <div class=\"array\">\r\n      <div\r\n        v-for=\"(height, index) in array\"\r\n        :key=\"index\"\r\n        class=\"bar\"\r\n        :style=\"{ height: height + 'px' }\"\r\n      ></div>\r\n    </div>\r\n    <button @click=\"startBogosort\" :disabled=\"isSorting\">Start Sorting</button>\r\n    <button @click=\"reshuffleArray\" :disabled=\"isSorting\">Reshuffle</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\ndata() {\r\n  return {\r\n    array: [50, 200, 30, 150, 100], // Sample array of heights\r\n    isSorting: false,\r\n  };\r\n},\r\nmethods: {\r\n  // Shuffle the array randomly\r\n  shuffleArray() {\r\n    for (let i = this.array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [this.array[i], this.array[j]] = [this.array[j], this.array[i]]; // Swap\r\n    }\r\n  },\r\n\r\n  // Check if the array is sorted\r\n  isSorted() {\r\n    for (let i = 0; i < this.array.length - 1; i++) {\r\n      if (this.array[i] > this.array[i + 1]) {\r\n        return false; // Array is not sorted\r\n      }\r\n    }\r\n    return true; // Array is sorted\r\n  },\r\n\r\n  // Main Bogosort function\r\n  async startBogosort() {\r\n    this.isSorting = true; // Disable button while sorting\r\n\r\n    // Keep shuffling until the array is sorted\r\n    while (!this.isSorted()) {\r\n      this.shuffleArray(); // Shuffle the array\r\n\r\n      // We need a small delay to visualize the sorting process\r\n      await new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          resolve();\r\n        }, 100); // Adjust delay time for a slower or faster visualization\r\n      });\r\n    }\r\n\r\n    this.isSorting = false; // Enable button once sorting is done\r\n  },\r\n\r\n  // Reshuffle the array manually\r\n  reshuffleArray() {\r\n    this.shuffleArray();\r\n  }\r\n},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.array {\r\ndisplay: flex;\r\njustify-content: center;\r\ngap: 5px;\r\nalign-items: flex-end;\r\nheight: 300px;\r\n}\r\n\r\n.bar {\r\nwidth: 30px;\r\nbackground-color: #4CAF50;\r\ntransition: height 0.2s ease-in-out;\r\n}\r\n\r\nbutton {\r\nmargin: 10px;\r\npadding: 10px 15px;\r\nfont-size: 16px;\r\ncursor: pointer;\r\nborder: none;\r\nbackground-color: #008CBA;\r\ncolor: white;\r\nborder-radius: 5px;\r\n}\r\n\r\nbutton:hover {\r\nbackground-color: #005f73;\r\n}\r\n\r\nbutton:disabled {\r\nbackground-color: gray;\r\ncursor: not-allowed;\r\n}\r\n</style>\r\n"],"names":[],"version":3,"file":"InteractiveDataStructures.aa436662.css.map","sourceRoot":"/__parcel_source_root/"}